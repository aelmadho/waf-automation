{
    "version": 3,
    "terraform_version": "0.11.7",
    "serial": 7,
    "lineage": "467a45c3-6a63-0f05-b6b9-d3247d324fd8",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "account_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "421471939647"
                }
            },
            "resources": {
                "aws_api_gateway_deployment.ApiGatewayBadBotDeployment": {
                    "type": "aws_api_gateway_deployment",
                    "depends_on": [
                        "aws_api_gateway_method.ApiGatewayBadBotMethod",
                        "aws_api_gateway_rest_api.ApiGatewayBadBot"
                    ],
                    "primary": {
                        "id": "cshm6i",
                        "attributes": {
                            "created_date": "2018-05-16T18:40:40Z",
                            "description": "CloudFormation Deployment Stage",
                            "execution_arn": "arn:aws:execute-api:us-east-1:421471939647:ds6uvv4x7e/CFDeploymentStage",
                            "id": "cshm6i",
                            "invoke_url": "https://ds6uvv4x7e.execute-api.us-east-1.amazonaws.com/CFDeploymentStage",
                            "rest_api_id": "ds6uvv4x7e",
                            "stage_name": "CFDeploymentStage"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_integration.ApiGatewayBadBotIntegration": {
                    "type": "aws_api_gateway_integration",
                    "depends_on": [
                        "aws_api_gateway_method.ApiGatewayBadBotMethod",
                        "aws_api_gateway_resource.ApiGatewayBadBotResource",
                        "aws_api_gateway_rest_api.ApiGatewayBadBot",
                        "aws_lambda_function.LambdaWAFBadBotParserFunction",
                        "aws_waf_ipset.WAFBadBotSet"
                    ],
                    "primary": {
                        "id": "agi-ds6uvv4x7e-jqcwqc-GET",
                        "attributes": {
                            "cache_key_parameters.#": "0",
                            "cache_namespace": "jqcwqc",
                            "connection_id": "",
                            "connection_type": "INTERNET",
                            "http_method": "GET",
                            "id": "agi-ds6uvv4x7e-jqcwqc-GET",
                            "integration_http_method": "POST",
                            "passthrough_behavior": "WHEN_NO_MATCH",
                            "request_parameters.%": "0",
                            "request_templates.%": "1",
                            "request_templates.application/json": "{\n    \"source_ip\" : \"$input.params('X-Forwarded-For')\",\n    \"user_agent\" : \"$input.params('User-Agent')\",\n    \"bad_bot_ip_set\" : \"fe5984f3-8d75-4102-948d-e9a89d06b7ac\"\n}",
                            "resource_id": "jqcwqc",
                            "rest_api_id": "ds6uvv4x7e",
                            "type": "AWS",
                            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFBadBotParserFunction/invocations"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_integration_response.ApiGatewayBadBotIntegrationResponse": {
                    "type": "aws_api_gateway_integration_response",
                    "depends_on": [
                        "aws_api_gateway_integration.ApiGatewayBadBotIntegration",
                        "aws_api_gateway_method_response.200",
                        "aws_api_gateway_resource.ApiGatewayBadBotResource",
                        "aws_api_gateway_rest_api.ApiGatewayBadBot"
                    ],
                    "primary": {
                        "id": "agir-ds6uvv4x7e-jqcwqc-GET-200",
                        "attributes": {
                            "http_method": "GET",
                            "id": "agir-ds6uvv4x7e-jqcwqc-GET-200",
                            "resource_id": "jqcwqc",
                            "response_parameters.%": "0",
                            "response_templates.%": "1",
                            "response_templates.application/json": "",
                            "rest_api_id": "ds6uvv4x7e",
                            "selection_pattern": "",
                            "status_code": "200"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_method.ApiGatewayBadBotMethod": {
                    "type": "aws_api_gateway_method",
                    "depends_on": [
                        "aws_api_gateway_resource.ApiGatewayBadBotResource",
                        "aws_api_gateway_rest_api.ApiGatewayBadBot",
                        "aws_lambda_function.LambdaWAFBadBotParserFunction",
                        "aws_lambda_permission.LambdaInvokePermissionBadBot"
                    ],
                    "primary": {
                        "id": "agm-ds6uvv4x7e-jqcwqc-GET",
                        "attributes": {
                            "api_key_required": "false",
                            "authorization": "NONE",
                            "http_method": "GET",
                            "id": "agm-ds6uvv4x7e-jqcwqc-GET",
                            "request_parameters.%": "1",
                            "request_parameters.method.request.header.X-Forwarded-For": "false",
                            "resource_id": "jqcwqc",
                            "rest_api_id": "ds6uvv4x7e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_method_response.200": {
                    "type": "aws_api_gateway_method_response",
                    "depends_on": [
                        "aws_api_gateway_method.ApiGatewayBadBotMethod",
                        "aws_api_gateway_resource.ApiGatewayBadBotResource",
                        "aws_api_gateway_rest_api.ApiGatewayBadBot"
                    ],
                    "primary": {
                        "id": "agmr-ds6uvv4x7e-jqcwqc-GET-200",
                        "attributes": {
                            "http_method": "GET",
                            "id": "agmr-ds6uvv4x7e-jqcwqc-GET-200",
                            "resource_id": "jqcwqc",
                            "rest_api_id": "ds6uvv4x7e",
                            "status_code": "200"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_resource.ApiGatewayBadBotResource": {
                    "type": "aws_api_gateway_resource",
                    "depends_on": [
                        "aws_api_gateway_rest_api.ApiGatewayBadBot"
                    ],
                    "primary": {
                        "id": "jqcwqc",
                        "attributes": {
                            "id": "jqcwqc",
                            "parent_id": "clec3lihej",
                            "path": "/waf",
                            "path_part": "waf",
                            "rest_api_id": "ds6uvv4x7e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_api_gateway_rest_api.ApiGatewayBadBot": {
                    "type": "aws_api_gateway_rest_api",
                    "depends_on": [],
                    "primary": {
                        "id": "ds6uvv4x7e",
                        "attributes": {
                            "binary_media_types.#": "0",
                            "created_date": "2018-05-16T18:38:45Z",
                            "description": "API created by AWS WAF Security Automations CloudFormation template. This endpoint will be used to capture bad bots.",
                            "id": "ds6uvv4x7e",
                            "minimum_compression_size": "-1",
                            "name": "jonathancandid - Security Automations - WAF Bad Bot API",
                            "policy": "",
                            "root_resource_id": "clec3lihej"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_event_rule.LambdaWAFReputationListsParserEventsRule": {
                    "type": "aws_cloudwatch_event_rule",
                    "depends_on": [
                        "aws_lambda_function.LambdaWAFReputationListsParserFunction",
                        "aws_waf_ipset.WAFReputationListsSet1",
                        "aws_waf_ipset.WAFReputationListsSet2"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFReputationListsParserEventsRule",
                        "attributes": {
                            "arn": "arn:aws:events:us-east-1:421471939647:rule/jonathancandid-LambdaWAFReputationListsParserEventsRule",
                            "description": "Security Automations - WAF Reputation Lists",
                            "id": "jonathancandid-LambdaWAFReputationListsParserEventsRule",
                            "is_enabled": "true",
                            "name": "jonathancandid-LambdaWAFReputationListsParserEventsRule",
                            "role_arn": "",
                            "schedule_expression": "rate(1 hour)"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_event_target.LambdaWAFReputationListsParserEventsRuleTarget": {
                    "type": "aws_cloudwatch_event_target",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.LambdaWAFReputationListsParserEventsRule",
                        "aws_lambda_function.LambdaWAFReputationListsParserFunction",
                        "aws_waf_ipset.WAFReputationListsSet1",
                        "aws_waf_ipset.WAFReputationListsSet2"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFReputationListsParserEventsRule-jonathancandid-LambdaWAFReputationListsParserFunction",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFReputationListsParserFunction",
                            "id": "jonathancandid-LambdaWAFReputationListsParserEventsRule-jonathancandid-LambdaWAFReputationListsParserFunction",
                            "input": "{\"lists\":[{\"url\":\"https://www.spamhaus.org/drop/drop.txt\"},{\"url\":\"https://check.torproject.org/exit-addresses\",\"prefix\":\"ExitAddress \"},{\"url\":\"https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt\"}],\"ipSetIds\": [\"6216c01d-7714-400f-b834-e26df6d745f0\",\"252a3bec-884c-4ade-ab8c-3d0bb9c9ee93\"]}",
                            "input_path": "",
                            "role_arn": "",
                            "rule": "jonathancandid-LambdaWAFReputationListsParserEventsRule",
                            "target_id": "jonathancandid-LambdaWAFReputationListsParserFunction"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.LambdaRoleBadBot": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleBadBot",
                        "attributes": {
                            "arn": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleBadBot",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-16T18:38:50Z",
                            "force_detach_policies": "false",
                            "id": "jonathancandid-LambdaRoleBadBot",
                            "max_session_duration": "3600",
                            "name": "jonathancandid-LambdaRoleBadBot",
                            "path": "/",
                            "unique_id": "AROAJE4JWBQ3QDH5ZUCCI"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.LambdaRoleCustomResource": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource",
                        "attributes": {
                            "arn": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleCustomResource",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-16T18:38:53Z",
                            "force_detach_policies": "false",
                            "id": "jonathancandid-LambdaRoleCustomResource",
                            "max_session_duration": "3600",
                            "name": "jonathancandid-LambdaRoleCustomResource",
                            "path": "/",
                            "unique_id": "AROAJNRGPEWSQ42RSMIXO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.LambdaRoleLogParser": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser",
                        "attributes": {
                            "arn": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleLogParser",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-16T18:38:50Z",
                            "force_detach_policies": "false",
                            "id": "jonathancandid-LambdaRoleLogParser",
                            "max_session_duration": "3600",
                            "name": "jonathancandid-LambdaRoleLogParser",
                            "path": "/",
                            "unique_id": "AROAIAQFQPJGUFWEGGDLY"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.LambdaRoleReputationListsParser": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleReputationListsParser",
                        "attributes": {
                            "arn": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleReputationListsParser",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-16T18:38:47Z",
                            "force_detach_policies": "false",
                            "id": "jonathancandid-LambdaRoleReputationListsParser",
                            "max_session_duration": "3600",
                            "name": "jonathancandid-LambdaRoleReputationListsParser",
                            "path": "/",
                            "unique_id": "AROAINROO4W5LTRXH52PU"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.SolutionHelperRole": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-SolutionHelperRole",
                        "attributes": {
                            "arn": "arn:aws:iam::421471939647:role/jonathancandid-SolutionHelperRole",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-05-16T18:38:48Z",
                            "force_detach_policies": "false",
                            "id": "jonathancandid-SolutionHelperRole",
                            "max_session_duration": "3600",
                            "name": "jonathancandid-SolutionHelperRole",
                            "path": "/",
                            "unique_id": "AROAJPF3BYBFMX4K26AIE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleBadBotCloudWatchAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleBadBot"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotCloudWatchAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotCloudWatchAccess",
                            "name": "jonathancandid-LambdaRoleBadBotCloudWatchAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"cloudwatch:GetMetricStatistics\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleBadBot"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleBadBotLogsAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleBadBot"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotLogsAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotLogsAccess",
                            "name": "jonathancandid-LambdaRoleBadBotLogsAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleBadBot"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleBadBotWAFGetAndUpdateIPSet": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleBadBot",
                        "aws_waf_ipset.WAFBadBotSet",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotWAFGetAndUpdateIPSet",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotWAFGetAndUpdateIPSet",
                            "name": "jonathancandid-LambdaRoleBadBotWAFGetAndUpdateIPSet",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetIPSet\",\n        \"waf:UpdateIPSet\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:waf::421471939647:ipset/fe5984f3-8d75-4102-948d-e9a89d06b7ac\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleBadBot"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleBadBotWAFGetChangeToken": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleBadBot"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotWAFGetChangeToken",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleBadBot:jonathancandid-LambdaRoleBadBotWAFGetChangeToken",
                            "name": "jonathancandid-LambdaRoleBadBotWAFGetChangeToken",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetChangeToken\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleBadBot"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceLambdaAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceLambdaAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceLambdaAccess",
                            "name": "jonathancandid-LambdaRoleCustomResourceLambdaAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:lambda:us-east-1:421471939647:function:*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceLogsAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceLogsAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceLogsAccess",
                            "name": "jonathancandid-LambdaRoleCustomResourceLogsAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceS3Access": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceS3Access",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceS3Access",
                            "name": "jonathancandid-LambdaRoleCustomResourceS3Access",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:CreateBucket\",\n        \"s3:GetBucketLocation\",\n        \"s3:GetBucketNotification\",\n        \"s3:GetObject\",\n        \"s3:ListBucket\",\n        \"s3:PutBucketNotification\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:s3:::jonathan-logging-candid\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceWAFAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource",
                        "aws_waf_web_acl.WAFWebACL",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFAccess",
                            "name": "jonathancandid-LambdaRoleCustomResourceWAFAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetWebACL\",\n        \"waf:UpdateWebACL\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:waf::421471939647:webacl/43cf8c3d-8605-4b23-beb3-fd165eda4979\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceWAFGetChangeToken": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFGetChangeToken",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFGetChangeToken",
                            "name": "jonathancandid-LambdaRoleCustomResourceWAFGetChangeToken",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetChangeToken\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleCustomResourceWAFRuleAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFRuleAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleCustomResource:jonathancandid-LambdaRoleCustomResourceWAFRuleAccess",
                            "name": "jonathancandid-LambdaRoleCustomResourceWAFRuleAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetRule\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:waf::421471939647:rule/*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleCustomResource"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserCloudWatchAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserCloudWatchAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserCloudWatchAccess",
                            "name": "jonathancandid-LambdaRoleLogParserCloudWatchAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"cloudwatch:GetMetricStatistics\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserLogsAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserLogsAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserLogsAccess",
                            "name": "jonathancandid-LambdaRoleLogParserLogsAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserS3Access": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserS3Access",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserS3Access",
                            "name": "jonathancandid-LambdaRoleLogParserS3Access",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:GetObject\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:s3:::jonathan-logging-candid/*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserS3AccessPut": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserS3AccessPut",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserS3AccessPut",
                            "name": "jonathancandid-LambdaRoleLogParserS3AccessPut",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:PutObject\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:s3:::jonathan-logging-candid/aws-waf-security-automations-current-blocked-ips.json\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserWAFGetAndUpdateIPSet": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser",
                        "aws_waf_ipset.WAFAutoBlockSet",
                        "aws_waf_ipset.WAFBlacklistSet",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserWAFGetAndUpdateIPSet",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserWAFGetAndUpdateIPSet",
                            "name": "jonathancandid-LambdaRoleLogParserWAFGetAndUpdateIPSet",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetIPSet\",\n        \"waf:UpdateIPSet\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n          \"arn:aws:waf::421471939647:ipset/240b3106-810d-46a1-bd52-a542a5971a8e\",\n          \"arn:aws:waf::421471939647:ipset/b9ae038f-a7db-400c-a643-f4f7efd530f3\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleLogParserWAFGetChangeToken": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserWAFGetChangeToken",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleLogParser:jonathancandid-LambdaRoleLogParserWAFGetChangeToken",
                            "name": "jonathancandid-LambdaRoleLogParserWAFGetChangeToken",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetChangeToken\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleLogParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleReputationListsParserCloudWatchAccess": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleReputationListsParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserCloudWatchAccess",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserCloudWatchAccess",
                            "name": "jonathancandid-LambdaRoleReputationListsParserCloudWatchAccess",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"cloudwatch:GetMetricStatistics\",\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleReputationListsParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleReputationListsParserCloudWatchLogs": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleReputationListsParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserCloudWatchLogs",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserCloudWatchLogs",
                            "name": "jonathancandid-LambdaRoleReputationListsParserCloudWatchLogs",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleReputationListsParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleReputationListsParserWAFGetAndUpdateIPSet": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleReputationListsParser",
                        "aws_waf_ipset.WAFReputationListsSet1",
                        "aws_waf_ipset.WAFReputationListsSet2",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserWAFGetAndUpdateIPSet",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserWAFGetAndUpdateIPSet",
                            "name": "jonathancandid-LambdaRoleReputationListsParserWAFGetAndUpdateIPSet",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetIPSet\",\n        \"waf:UpdateIPSet\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:waf::421471939647:ipset/6216c01d-7714-400f-b834-e26df6d745f0\",\n        \"arn:aws:waf::421471939647:ipset/252a3bec-884c-4ade-ab8c-3d0bb9c9ee93\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleReputationListsParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.LambdaRoleReputationListsParserWAFGetChangeToken": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleReputationListsParser"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserWAFGetChangeToken",
                        "attributes": {
                            "id": "jonathancandid-LambdaRoleReputationListsParser:jonathancandid-LambdaRoleReputationListsParserWAFGetChangeToken",
                            "name": "jonathancandid-LambdaRoleReputationListsParserWAFGetChangeToken",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"waf:GetChangeToken\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-LambdaRoleReputationListsParser"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role_policy.SolutionHelperRoleSolution_Helper_Permissions": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.SolutionHelperRole"
                    ],
                    "primary": {
                        "id": "jonathancandid-SolutionHelperRole:jonathancandid-SolutionHelperRoleSolution_Helper_Permissions",
                        "attributes": {
                            "id": "jonathancandid-SolutionHelperRole:jonathancandid-SolutionHelperRoleSolution_Helper_Permissions",
                            "name": "jonathancandid-SolutionHelperRoleSolution_Helper_Permissions",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"arn:aws:logs:*:*:log-group:/aws/lambda/*\"\n      ]\n    },\n    {\n      \"Action\": [\n        \"lambda:AddPermission\",\n        \"lambda:CreateFunction\",\n        \"lambda:DeleteFunction\",\n        \"lambda:GetFunction\",\n        \"lambda:UpdateFunctionCode\",\n        \"lambda:UpdateFunctionConfiguration\",\n        \"iam:PassRole\"\n\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
                            "role": "jonathancandid-SolutionHelperRole"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_function.LambdaWAFBadBotParserFunction": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleBadBot",
                        "aws_s3_bucket_object.AccessHandlerZip",
                        "aws_waf_ipset.WAFBadBotSet"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFBadBotParserFunction",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFBadBotParserFunction",
                            "dead_letter_config.#": "0",
                            "description": "This lambda function will intercepts and inspects trap endpoint requests to extract its IP address, and then add it to an AWS WAF block list.",
                            "environment.#": "1",
                            "environment.0.variables.%": "11",
                            "environment.0.variables.ActivateBadBotProtectionParam": "yes",
                            "environment.0.variables.ActivateHttpFloodProtectionParam": "yes",
                            "environment.0.variables.ActivateReputationListsProtectionParam": "yes",
                            "environment.0.variables.ActivateScansProbesProtectionParam": "yes",
                            "environment.0.variables.CloudFrontAccessLogBucket": "jonathan-logging-candid",
                            "environment.0.variables.CrossSiteScriptingProtectionParam": "yes",
                            "environment.0.variables.ErrorThreshold": "500",
                            "environment.0.variables.RequestThreshold": "800",
                            "environment.0.variables.SqlInjectionProtectionParam": "yes",
                            "environment.0.variables.WAFBadBotSet": "fe5984f3-8d75-4102-948d-e9a89d06b7ac",
                            "environment.0.variables.WAFBlockPeriod": "240",
                            "function_name": "jonathancandid-LambdaWAFBadBotParserFunction",
                            "handler": "access-handler.lambda_handler",
                            "id": "jonathancandid-LambdaWAFBadBotParserFunction",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFBadBotParserFunction/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-05-16T18:39:28.958+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFBadBotParserFunction:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleBadBot",
                            "runtime": "python2.7",
                            "s3_bucket": "jonathancandid-waflambdafiles",
                            "s3_key": "access-handler.zip",
                            "source_code_hash": "cuyshl5OTiDcp9/9uigtEXWgajFAzFcJIF3rchIgGHw=",
                            "source_code_size": "1297",
                            "tags.%": "0",
                            "timeout": "300",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_function.LambdaWAFCustomResourceFunction": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleCustomResource",
                        "aws_s3_bucket_object.CustomResourceZip"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFCustomResourceFunction",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFCustomResourceFunction",
                            "dead_letter_config.#": "0",
                            "description": "This lambda function configures the Web ACL rules based on the features enabled in the CloudFormation template. Parameters: yes",
                            "environment.#": "1",
                            "environment.0.variables.%": "10",
                            "environment.0.variables.ActivateBadBotProtectionParam": "yes",
                            "environment.0.variables.ActivateHttpFloodProtectionParam": "yes",
                            "environment.0.variables.ActivateReputationListsProtectionParam": "yes",
                            "environment.0.variables.ActivateScansProbesProtectionParam": "yes",
                            "environment.0.variables.CloudFrontAccessLogBucket": "jonathan-logging-candid",
                            "environment.0.variables.CrossSiteScriptingProtectionParam": "yes",
                            "environment.0.variables.ErrorThreshold": "500",
                            "environment.0.variables.RequestThreshold": "800",
                            "environment.0.variables.SqlInjectionProtectionParam": "yes",
                            "environment.0.variables.WAFBlockPeriod": "240",
                            "function_name": "jonathancandid-LambdaWAFCustomResourceFunction",
                            "handler": "custom-resource.lambda_handler",
                            "id": "jonathancandid-LambdaWAFCustomResourceFunction",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFCustomResourceFunction/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-05-16T18:40:33.224+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFCustomResourceFunction:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleCustomResource",
                            "runtime": "python2.7",
                            "s3_bucket": "jonathancandid-waflambdafiles",
                            "s3_key": "custom-resource.zip",
                            "source_code_hash": "QkiwF+ubAISfFU/wZaJWhLcZR11PmLWFl5YzfoaZDB4=",
                            "source_code_size": "862499",
                            "tags.%": "0",
                            "timeout": "300",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_function.LambdaWAFLogParserFunction": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleLogParser",
                        "aws_s3_bucket_object.LogParserZip",
                        "aws_waf_ipset.WAFAutoBlockSet",
                        "aws_waf_ipset.WAFBlacklistSet"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFLogParserFunction",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFLogParserFunction",
                            "dead_letter_config.#": "0",
                            "description": "This function parses CloudFront access logs to identify suspicious behavior, such as an abnormal amount of requests or errors. It then blocks those IP addresses for a customer-defined period of time.",
                            "environment.#": "1",
                            "environment.0.variables.%": "12",
                            "environment.0.variables.ActivateBadBotProtectionParam": "yes",
                            "environment.0.variables.ActivateHttpFloodProtectionParam": "yes",
                            "environment.0.variables.ActivateReputationListsProtectionParam": "yes",
                            "environment.0.variables.ActivateScansProbesProtectionParam": "yes",
                            "environment.0.variables.AutoBlockIPSetID": "b9ae038f-a7db-400c-a643-f4f7efd530f3",
                            "environment.0.variables.BlacklistIPSetID": "240b3106-810d-46a1-bd52-a542a5971a8e",
                            "environment.0.variables.CloudFrontAccessLogBucket": "jonathan-logging-candid",
                            "environment.0.variables.CrossSiteScriptingProtectionParam": "yes",
                            "environment.0.variables.ErrorThreshold": "500",
                            "environment.0.variables.RequestThreshold": "800",
                            "environment.0.variables.SqlInjectionProtectionParam": "yes",
                            "environment.0.variables.WAFBlockPeriod": "240",
                            "function_name": "jonathancandid-LambdaWAFLogParserFunction",
                            "handler": "log-parser.lambda_handler",
                            "id": "jonathancandid-LambdaWAFLogParserFunction",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFLogParserFunction/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-05-16T18:39:37.747+0000",
                            "memory_size": "512",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFLogParserFunction:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleLogParser",
                            "runtime": "python2.7",
                            "s3_bucket": "jonathancandid-waflambdafiles",
                            "s3_key": "log-parser.zip",
                            "source_code_hash": "OkwcPyJaKnmy2C0M+v3ARzBv6rlVNXbc37Cp4dT2BlM=",
                            "source_code_size": "3547",
                            "tags.%": "0",
                            "timeout": "300",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_function.LambdaWAFReputationListsParserFunction": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.LambdaRoleReputationListsParser",
                        "aws_s3_bucket_object.ReputationListsParserZip"
                    ],
                    "primary": {
                        "id": "jonathancandid-LambdaWAFReputationListsParserFunction",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFReputationListsParserFunction",
                            "dead_letter_config.#": "0",
                            "description": "This lambda function checks third-party IP reputation lists hourly for new IP ranges to block. These lists include the Spamhaus Dont Route Or Peer (DROP) and Extended Drop (EDROP) lists, the Proofpoint Emerging Threats IP list, and the Tor exit node list.",
                            "environment.#": "1",
                            "environment.0.variables.%": "10",
                            "environment.0.variables.ActivateBadBotProtectionParam": "yes",
                            "environment.0.variables.ActivateHttpFloodProtectionParam": "yes",
                            "environment.0.variables.ActivateReputationListsProtectionParam": "yes",
                            "environment.0.variables.ActivateScansProbesProtectionParam": "yes",
                            "environment.0.variables.CloudFrontAccessLogBucket": "jonathan-logging-candid",
                            "environment.0.variables.CrossSiteScriptingProtectionParam": "yes",
                            "environment.0.variables.ErrorThreshold": "500",
                            "environment.0.variables.RequestThreshold": "800",
                            "environment.0.variables.SqlInjectionProtectionParam": "yes",
                            "environment.0.variables.WAFBlockPeriod": "240",
                            "function_name": "jonathancandid-LambdaWAFReputationListsParserFunction",
                            "handler": "reputation-lists-parser.handler",
                            "id": "jonathancandid-LambdaWAFReputationListsParserFunction",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFReputationListsParserFunction/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-05-16T18:40:33.495+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFReputationListsParserFunction:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::421471939647:role/jonathancandid-LambdaRoleReputationListsParser",
                            "runtime": "nodejs4.3",
                            "s3_bucket": "jonathancandid-waflambdafiles",
                            "s3_key": "reputation-lists-parser.zip",
                            "source_code_hash": "t8egcwTcTqA6RHs+HDYII8mimSTnD01zPPGqDD0+xTs=",
                            "source_code_size": "715944",
                            "tags.%": "0",
                            "timeout": "300",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_function.SolutionHelper": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.SolutionHelperRole",
                        "aws_s3_bucket_object.SolutionHelperZip"
                    ],
                    "primary": {
                        "id": "jonathancandid-SolutionHelper",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-SolutionHelper",
                            "dead_letter_config.#": "0",
                            "description": "This lambda function executes generic common tasks to support this solution.",
                            "environment.#": "1",
                            "environment.0.variables.%": "11",
                            "environment.0.variables.ActivateBadBotProtectionParam": "yes",
                            "environment.0.variables.ActivateHttpFloodProtectionParam": "yes",
                            "environment.0.variables.ActivateReputationListsProtectionParam": "yes",
                            "environment.0.variables.ActivateScansProbesProtectionParam": "yes",
                            "environment.0.variables.CloudFrontAccessLogBucket": "jonathan-logging-candid",
                            "environment.0.variables.CrossSiteScriptingProtectionParam": "yes",
                            "environment.0.variables.ErrorThreshold": "500",
                            "environment.0.variables.RequestThreshold": "800",
                            "environment.0.variables.SendAnonymousUsageData": "yes",
                            "environment.0.variables.SqlInjectionProtectionParam": "yes",
                            "environment.0.variables.WAFBlockPeriod": "240",
                            "function_name": "jonathancandid-SolutionHelper",
                            "handler": "log-parser.lambda_handler",
                            "id": "jonathancandid-SolutionHelper",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-SolutionHelper/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-05-16T18:40:55.431+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-SolutionHelper:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::421471939647:role/jonathancandid-SolutionHelperRole",
                            "runtime": "python2.7",
                            "s3_bucket": "jonathancandid-waflambdafiles",
                            "s3_key": "solution-helper.zip",
                            "source_code_hash": "3o1LWd7HXLVORsN68dAlape04JLPNvyfQqmqC4FMHnc=",
                            "source_code_size": "2149295",
                            "tags.%": "0",
                            "timeout": "300",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_permission.LambdaInvokePermissionBadBot": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.LambdaWAFBadBotParserFunction"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromCloudWatch",
                        "attributes": {
                            "action": "lambda:*",
                            "function_name": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFBadBotParserFunction",
                            "id": "AllowExecutionFromCloudWatch",
                            "principal": "apigateway.amazonaws.com",
                            "qualifier": "",
                            "statement_id": "AllowExecutionFromCloudWatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_permission.LambdaInvokePermissionLogParser": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.LambdaWAFLogParserFunction",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromS3Bucket",
                        "attributes": {
                            "action": "lambda:*",
                            "function_name": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFLogParserFunction",
                            "id": "AllowExecutionFromS3Bucket",
                            "principal": "s3.amazonaws.com",
                            "qualifier": "",
                            "source_account": "421471939647",
                            "statement_id": "AllowExecutionFromS3Bucket"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_lambda_permission.LambdaInvokePermissionReputationListsParser": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.LambdaWAFReputationListsParserEventsRule",
                        "aws_lambda_function.LambdaWAFReputationListsParserFunction"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromCloudWatch",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFReputationListsParserFunction",
                            "id": "AllowExecutionFromCloudWatch",
                            "principal": "events.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:events:us-east-1:421471939647:rule/jonathancandid-LambdaWAFReputationListsParserEventsRule",
                            "statement_id": "AllowExecutionFromCloudWatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket.WAFLambdaFiles": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "jonathancandid-waflambdafiles",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::jonathancandid-waflambdafiles",
                            "bucket": "jonathancandid-waflambdafiles",
                            "bucket_domain_name": "jonathancandid-waflambdafiles.s3.amazonaws.com",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "jonathancandid-waflambdafiles",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "2",
                            "tags.Environment": "Production",
                            "tags.Name": "WAF Lambda Files",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_notification.LambdaWAFLogParserS3Notification": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_lambda_function.LambdaWAFLogParserFunction"
                    ],
                    "primary": {
                        "id": "jonathan-logging-candid",
                        "attributes": {
                            "bucket": "jonathan-logging-candid",
                            "id": "jonathan-logging-candid",
                            "lambda_function.#": "1",
                            "lambda_function.0.events.#": "1",
                            "lambda_function.0.events.3356830603": "s3:ObjectCreated:*",
                            "lambda_function.0.filter_prefix": "",
                            "lambda_function.0.filter_suffix": "gz",
                            "lambda_function.0.id": "jonathancandid-LambdaWAFLogParserFunction",
                            "lambda_function.0.lambda_function_arn": "arn:aws:lambda:us-east-1:421471939647:function:jonathancandid-LambdaWAFLogParserFunction",
                            "queue.#": "0",
                            "topic.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_object.AccessHandlerZip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.WAFLambdaFiles"
                    ],
                    "primary": {
                        "id": "access-handler.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "jonathancandid-waflambdafiles",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "0a472a54f71a35d75c651b3074e5cfe0",
                            "id": "access-handler.zip",
                            "key": "access-handler.zip",
                            "server_side_encryption": "",
                            "source": "files/access-handler/access-handler.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_object.CustomResourceZip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.WAFLambdaFiles"
                    ],
                    "primary": {
                        "id": "custom-resource.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "jonathancandid-waflambdafiles",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "88fb772ea284157c3012066b73b726ed",
                            "id": "custom-resource.zip",
                            "key": "custom-resource.zip",
                            "server_side_encryption": "",
                            "source": "files/custom-resource/custom-resource.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_object.LogParserZip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.WAFLambdaFiles"
                    ],
                    "primary": {
                        "id": "log-parser.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "jonathancandid-waflambdafiles",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "829cb78fed45f3b39ef4fa4e1867a9d6",
                            "id": "log-parser.zip",
                            "key": "log-parser.zip",
                            "server_side_encryption": "",
                            "source": "files/log-parser/log-parser.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_object.ReputationListsParserZip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.WAFLambdaFiles"
                    ],
                    "primary": {
                        "id": "reputation-lists-parser.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "jonathancandid-waflambdafiles",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "207c44823cfb311a8bace721bb345d62",
                            "id": "reputation-lists-parser.zip",
                            "key": "reputation-lists-parser.zip",
                            "server_side_encryption": "",
                            "source": "files/reputation-lists-parser/reputation-lists-parser.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket_object.SolutionHelperZip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.WAFLambdaFiles"
                    ],
                    "primary": {
                        "id": "solution-helper.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "jonathancandid-waflambdafiles",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "1402c11d58c91cb858d2e168866be061",
                            "id": "solution-helper.zip",
                            "key": "solution-helper.zip",
                            "server_side_encryption": "",
                            "source": "files/solution-helper/solution-helper.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFAutoBlockSet": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "b9ae038f-a7db-400c-a643-f4f7efd530f3",
                        "attributes": {
                            "id": "b9ae038f-a7db-400c-a643-f4f7efd530f3",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - Auto Block Set"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFBadBotSet": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "fe5984f3-8d75-4102-948d-e9a89d06b7ac",
                        "attributes": {
                            "id": "fe5984f3-8d75-4102-948d-e9a89d06b7ac",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - IP Bad Bot Set"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFBlacklistSet": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "240b3106-810d-46a1-bd52-a542a5971a8e",
                        "attributes": {
                            "id": "240b3106-810d-46a1-bd52-a542a5971a8e",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - Blacklist Set"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFReputationListsSet1": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "6216c01d-7714-400f-b834-e26df6d745f0",
                        "attributes": {
                            "id": "6216c01d-7714-400f-b834-e26df6d745f0",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - IP Reputation Lists Set #1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFReputationListsSet2": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "252a3bec-884c-4ade-ab8c-3d0bb9c9ee93",
                        "attributes": {
                            "id": "252a3bec-884c-4ade-ab8c-3d0bb9c9ee93",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - IP Reputation Lists Set #2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_ipset.WAFWhitelistSet": {
                    "type": "aws_waf_ipset",
                    "depends_on": [],
                    "primary": {
                        "id": "a9b1938e-b5c4-43f4-9fd9-b95b39fe4f94",
                        "attributes": {
                            "id": "a9b1938e-b5c4-43f4-9fd9-b95b39fe4f94",
                            "ip_set_descriptors.#": "1",
                            "ip_set_descriptors.3774090169.type": "IPV4",
                            "ip_set_descriptors.3774090169.value": "0.0.0.0/32",
                            "name": "jonathancandid - Whitelist Set"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFAutoBlockRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFAutoBlockSet"
                    ],
                    "primary": {
                        "id": "1c3fe505-db09-41d9-92fe-6334b11910ef",
                        "attributes": {
                            "id": "1c3fe505-db09-41d9-92fe-6334b11910ef",
                            "metric_name": "SecurityAutomationsAutoBlockRule",
                            "name": "jonathancandid - Auto Block Rule",
                            "predicates.#": "1",
                            "predicates.3213524562.data_id": "b9ae038f-a7db-400c-a643-f4f7efd530f3",
                            "predicates.3213524562.negated": "false",
                            "predicates.3213524562.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFBadBotRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFBadBotSet"
                    ],
                    "primary": {
                        "id": "2439d00d-7a17-4ab9-af5c-13d6a6bb7ee2",
                        "attributes": {
                            "id": "2439d00d-7a17-4ab9-af5c-13d6a6bb7ee2",
                            "metric_name": "SecurityAutomationsBadBotRule",
                            "name": "jonathancandid - Bad Bot Rule",
                            "predicates.#": "1",
                            "predicates.2131650591.data_id": "fe5984f3-8d75-4102-948d-e9a89d06b7ac",
                            "predicates.2131650591.negated": "false",
                            "predicates.2131650591.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFBlacklistRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFBlacklistSet"
                    ],
                    "primary": {
                        "id": "0c04288c-9415-4625-ada8-e8ee3c486de0",
                        "attributes": {
                            "id": "0c04288c-9415-4625-ada8-e8ee3c486de0",
                            "metric_name": "SecurityAutomationsBlacklistRule",
                            "name": "jonathancandid - Blacklist Rule",
                            "predicates.#": "1",
                            "predicates.3756367897.data_id": "240b3106-810d-46a1-bd52-a542a5971a8e",
                            "predicates.3756367897.negated": "false",
                            "predicates.3756367897.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFIPReputationListsRule1": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFReputationListsSet1"
                    ],
                    "primary": {
                        "id": "49edd14d-1f0e-46c0-9efe-3052d921d7cc",
                        "attributes": {
                            "id": "49edd14d-1f0e-46c0-9efe-3052d921d7cc",
                            "metric_name": "SecurityAutomationsIPReputationListsRule1",
                            "name": "jonathancandid - WAF IP Reputation Lists Rule #1",
                            "predicates.#": "1",
                            "predicates.2615098673.data_id": "6216c01d-7714-400f-b834-e26df6d745f0",
                            "predicates.2615098673.negated": "false",
                            "predicates.2615098673.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFIPReputationListsRule2": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFReputationListsSet2"
                    ],
                    "primary": {
                        "id": "a4fe9dbf-5a77-43ef-bc0a-2192bbf09ea6",
                        "attributes": {
                            "id": "a4fe9dbf-5a77-43ef-bc0a-2192bbf09ea6",
                            "metric_name": "SecurityAutomationsIPReputationListsRule2",
                            "name": "jonathancandid - WAF IP Reputation Lists Rule #2",
                            "predicates.#": "1",
                            "predicates.236062044.data_id": "252a3bec-884c-4ade-ab8c-3d0bb9c9ee93",
                            "predicates.236062044.negated": "false",
                            "predicates.236062044.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFSqlInjectionRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_sql_injection_match_set.WAFSqlInjectionDetection"
                    ],
                    "primary": {
                        "id": "57c46073-935b-4156-8f89-e7d0e96dc9c8",
                        "attributes": {
                            "id": "57c46073-935b-4156-8f89-e7d0e96dc9c8",
                            "metric_name": "SecurityAutomationsSqlInjectionRule",
                            "name": "jonathancandid - SQL Injection Rule",
                            "predicates.#": "1",
                            "predicates.1612038128.data_id": "dfe25343-730b-4525-8782-f24607003c32",
                            "predicates.1612038128.negated": "false",
                            "predicates.1612038128.type": "SqlInjectionMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFWhitelistRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_ipset.WAFWhitelistSet"
                    ],
                    "primary": {
                        "id": "2ee4e48e-b3a0-4cc0-8730-fb337521d17e",
                        "attributes": {
                            "id": "2ee4e48e-b3a0-4cc0-8730-fb337521d17e",
                            "metric_name": "SecurityAutomationsWhitelistRule",
                            "name": "jonathancandid - Whitelist Rule",
                            "predicates.#": "1",
                            "predicates.847730271.data_id": "a9b1938e-b5c4-43f4-9fd9-b95b39fe4f94",
                            "predicates.847730271.negated": "false",
                            "predicates.847730271.type": "IPMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_rule.WAFXssRule": {
                    "type": "aws_waf_rule",
                    "depends_on": [
                        "aws_waf_xss_match_set.WAFXssDetection"
                    ],
                    "primary": {
                        "id": "afc2b7e0-a7d4-4afa-b3dd-9a0206ae8869",
                        "attributes": {
                            "id": "afc2b7e0-a7d4-4afa-b3dd-9a0206ae8869",
                            "metric_name": "SecurityAutomationsXssRule",
                            "name": "jonathancandid - XSS Rule",
                            "predicates.#": "1",
                            "predicates.2974582358.data_id": "f032c796-cebf-43e4-b85f-34d78f6158a3",
                            "predicates.2974582358.negated": "false",
                            "predicates.2974582358.type": "XssMatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_sql_injection_match_set.WAFSqlInjectionDetection": {
                    "type": "aws_waf_sql_injection_match_set",
                    "depends_on": [],
                    "primary": {
                        "id": "dfe25343-730b-4525-8782-f24607003c32",
                        "attributes": {
                            "id": "dfe25343-730b-4525-8782-f24607003c32",
                            "name": "jonathancandid - SQL Injection Detection",
                            "sql_injection_match_tuples.#": "6",
                            "sql_injection_match_tuples.1884490744.field_to_match.#": "1",
                            "sql_injection_match_tuples.1884490744.field_to_match.1624177473.data": "none",
                            "sql_injection_match_tuples.1884490744.field_to_match.1624177473.type": "QUERY_STRING",
                            "sql_injection_match_tuples.1884490744.text_transformation": "HTML_ENTITY_DECODE",
                            "sql_injection_match_tuples.2322139836.field_to_match.#": "1",
                            "sql_injection_match_tuples.2322139836.field_to_match.666226349.data": "none",
                            "sql_injection_match_tuples.2322139836.field_to_match.666226349.type": "URI",
                            "sql_injection_match_tuples.2322139836.text_transformation": "URL_DECODE",
                            "sql_injection_match_tuples.2667873358.field_to_match.#": "1",
                            "sql_injection_match_tuples.2667873358.field_to_match.3840488084.data": "none",
                            "sql_injection_match_tuples.2667873358.field_to_match.3840488084.type": "BODY",
                            "sql_injection_match_tuples.2667873358.text_transformation": "HTML_ENTITY_DECODE",
                            "sql_injection_match_tuples.3210420527.field_to_match.#": "1",
                            "sql_injection_match_tuples.3210420527.field_to_match.3840488084.data": "none",
                            "sql_injection_match_tuples.3210420527.field_to_match.3840488084.type": "BODY",
                            "sql_injection_match_tuples.3210420527.text_transformation": "URL_DECODE",
                            "sql_injection_match_tuples.3552758634.field_to_match.#": "1",
                            "sql_injection_match_tuples.3552758634.field_to_match.666226349.data": "none",
                            "sql_injection_match_tuples.3552758634.field_to_match.666226349.type": "URI",
                            "sql_injection_match_tuples.3552758634.text_transformation": "HTML_ENTITY_DECODE",
                            "sql_injection_match_tuples.4056233540.field_to_match.#": "1",
                            "sql_injection_match_tuples.4056233540.field_to_match.1624177473.data": "none",
                            "sql_injection_match_tuples.4056233540.field_to_match.1624177473.type": "QUERY_STRING",
                            "sql_injection_match_tuples.4056233540.text_transformation": "URL_DECODE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_web_acl.WAFWebACL": {
                    "type": "aws_waf_web_acl",
                    "depends_on": [
                        "aws_waf_rule.WAFAutoBlockRule",
                        "aws_waf_rule.WAFBadBotRule",
                        "aws_waf_rule.WAFBlacklistRule",
                        "aws_waf_rule.WAFIPReputationListsRule1",
                        "aws_waf_rule.WAFIPReputationListsRule2",
                        "aws_waf_rule.WAFSqlInjectionRule",
                        "aws_waf_rule.WAFWhitelistRule",
                        "aws_waf_rule.WAFXssRule"
                    ],
                    "primary": {
                        "id": "43cf8c3d-8605-4b23-beb3-fd165eda4979",
                        "attributes": {
                            "default_action.#": "1",
                            "default_action.4234791575.type": "ALLOW",
                            "id": "43cf8c3d-8605-4b23-beb3-fd165eda4979",
                            "metric_name": "SecurityAutomationsMaliciousRequesters",
                            "name": "jonathancandid",
                            "rules.#": "8",
                            "rules.1415193441.action.#": "1",
                            "rules.1415193441.action.2267395054.type": "BLOCK",
                            "rules.1415193441.priority": "40",
                            "rules.1415193441.rule_id": "49edd14d-1f0e-46c0-9efe-3052d921d7cc",
                            "rules.1415193441.type": "REGULAR",
                            "rules.165737930.action.#": "1",
                            "rules.165737930.action.2267395054.type": "BLOCK",
                            "rules.165737930.priority": "80",
                            "rules.165737930.rule_id": "afc2b7e0-a7d4-4afa-b3dd-9a0206ae8869",
                            "rules.165737930.type": "REGULAR",
                            "rules.1929519320.action.#": "1",
                            "rules.1929519320.action.4234791575.type": "ALLOW",
                            "rules.1929519320.priority": "10",
                            "rules.1929519320.rule_id": "2ee4e48e-b3a0-4cc0-8730-fb337521d17e",
                            "rules.1929519320.type": "REGULAR",
                            "rules.2228088644.action.#": "1",
                            "rules.2228088644.action.2267395054.type": "BLOCK",
                            "rules.2228088644.priority": "20",
                            "rules.2228088644.rule_id": "0c04288c-9415-4625-ada8-e8ee3c486de0",
                            "rules.2228088644.type": "REGULAR",
                            "rules.2361492901.action.#": "1",
                            "rules.2361492901.action.2267395054.type": "BLOCK",
                            "rules.2361492901.priority": "70",
                            "rules.2361492901.rule_id": "57c46073-935b-4156-8f89-e7d0e96dc9c8",
                            "rules.2361492901.type": "REGULAR",
                            "rules.2414852795.action.#": "1",
                            "rules.2414852795.action.2267395054.type": "BLOCK",
                            "rules.2414852795.priority": "30",
                            "rules.2414852795.rule_id": "1c3fe505-db09-41d9-92fe-6334b11910ef",
                            "rules.2414852795.type": "REGULAR",
                            "rules.2826624128.action.#": "1",
                            "rules.2826624128.action.2267395054.type": "BLOCK",
                            "rules.2826624128.priority": "50",
                            "rules.2826624128.rule_id": "a4fe9dbf-5a77-43ef-bc0a-2192bbf09ea6",
                            "rules.2826624128.type": "REGULAR",
                            "rules.3617684750.action.#": "1",
                            "rules.3617684750.action.2267395054.type": "BLOCK",
                            "rules.3617684750.priority": "60",
                            "rules.3617684750.rule_id": "2439d00d-7a17-4ab9-af5c-13d6a6bb7ee2",
                            "rules.3617684750.type": "REGULAR"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_waf_xss_match_set.WAFXssDetection": {
                    "type": "aws_waf_xss_match_set",
                    "depends_on": [],
                    "primary": {
                        "id": "f032c796-cebf-43e4-b85f-34d78f6158a3",
                        "attributes": {
                            "id": "f032c796-cebf-43e4-b85f-34d78f6158a3",
                            "name": "jonathancandid - XSS Detection Detection",
                            "xss_match_tuples.#": "6",
                            "xss_match_tuples.1884490744.field_to_match.#": "1",
                            "xss_match_tuples.1884490744.field_to_match.1624177473.data": "none",
                            "xss_match_tuples.1884490744.field_to_match.1624177473.type": "QUERY_STRING",
                            "xss_match_tuples.1884490744.text_transformation": "HTML_ENTITY_DECODE",
                            "xss_match_tuples.2322139836.field_to_match.#": "1",
                            "xss_match_tuples.2322139836.field_to_match.666226349.data": "none",
                            "xss_match_tuples.2322139836.field_to_match.666226349.type": "URI",
                            "xss_match_tuples.2322139836.text_transformation": "URL_DECODE",
                            "xss_match_tuples.2667873358.field_to_match.#": "1",
                            "xss_match_tuples.2667873358.field_to_match.3840488084.data": "none",
                            "xss_match_tuples.2667873358.field_to_match.3840488084.type": "BODY",
                            "xss_match_tuples.2667873358.text_transformation": "HTML_ENTITY_DECODE",
                            "xss_match_tuples.3210420527.field_to_match.#": "1",
                            "xss_match_tuples.3210420527.field_to_match.3840488084.data": "none",
                            "xss_match_tuples.3210420527.field_to_match.3840488084.type": "BODY",
                            "xss_match_tuples.3210420527.text_transformation": "URL_DECODE",
                            "xss_match_tuples.3552758634.field_to_match.#": "1",
                            "xss_match_tuples.3552758634.field_to_match.666226349.data": "none",
                            "xss_match_tuples.3552758634.field_to_match.666226349.type": "URI",
                            "xss_match_tuples.3552758634.text_transformation": "HTML_ENTITY_DECODE",
                            "xss_match_tuples.4056233540.field_to_match.#": "1",
                            "xss_match_tuples.4056233540.field_to_match.1624177473.data": "none",
                            "xss_match_tuples.4056233540.field_to_match.1624177473.type": "QUERY_STRING",
                            "xss_match_tuples.4056233540.text_transformation": "URL_DECODE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_caller_identity.current": {
                    "type": "aws_caller_identity",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-05-16 18:38:07.127711 +0000 UTC",
                        "attributes": {
                            "account_id": "421471939647",
                            "arn": "arn:aws:iam::421471939647:user/jonathan.glass",
                            "id": "2018-05-16 18:38:07.127711 +0000 UTC",
                            "user_id": "AIDAINILP7XMNQNGU3KGC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
